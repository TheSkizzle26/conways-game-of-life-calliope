{"entries":[{"timestamp":1738245729565,"editorVersion":"7.0.3","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"class Main {\n    grid: number[][]\n    size: number[]\n\n    constructor (fill=0.5, size=[10, 10]) {\n        this.size = size\n\n        // initialize grid\n        this.grid = []\n        for (let y = 0; y < size[1]; y++) {\n            let row = []\n            for (let x = 0; x < size[0]; x++) {\n                if (randint(0, 99) < fill) {\n                    row.push(1)\n                }\n                else {\n                    row.push(0)\n                }\n            }\n            this.grid.push(row)\n        }\n    }\n\n    is_inside_grid(x: number, y: number) {\n        if (x < 0) { return false }\n        if (x >= this.size[0]) { return false }\n        if (y < 0) { return false }\n        if (y >= this.size[1]) { return false }\n        return true\n    }\n\n    neighbours (x, y)\n    \n    update_cell(x: number, y: number) {\n        \n    }\n\n    update_grid () {\n        for (let x = 0; x < this.size[0]; x++) {\n            for (let y = 0; y < this.size[1]; y++) {\n                this.update_cell(x, y)\n            }\n        }\n    }\n\n    render () {\n\n    }\n\n    run () {\n        while (true) {\n            this.update_grid()\n            this.render()\n        }\n    }\n}"],[1,"\n"]],"start1":0,"start2":0,"length1":1170,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"v3\": \"*\",\n        \"matrix\": \"github:calliope-net/matrix#v0.4.5\""],[0,"\n   "]],"start1":98,"start2":98,"length1":82,"length2":8},{"diffs":[[0,"pt-only\""],[1,",\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":239,"start2":239,"length1":11,"length2":42}]}]},{"timestamp":1738246329355,"editorVersion":"7.0.3","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"const NEIGHBOURS : Array<number[]> = []\nfor (let x = -1; x <= 1; x++) {\n    for (let y = -1; y <= 1; y++) {\n        if ((x, y) == (0, 0)) {\n            continue\n        }\n        NEIGHBOURS.push([x, y])\n    }\n}\n\n\n"],[0,"clas"]],"start1":0,"start2":0,"length1":217,"length2":4},{"diffs":[[0,"bours (x"],[1,", y)\n    \n    update_cell(x"],[0,": number"]],"start1":769,"start2":769,"length1":16,"length2":43},{"diffs":[[0,"    "],[-1,"let n = 0\n        for (let offset of NEIGHBOURS) {\n            if (this.is_inside_grid(x + offset[0], y + offset[1])) {\n                n += this.grid[x + offset[0]][y + offset[1]]\n            }\n        }\n        return n\n    }\n    \n    update_cell(x: number, y: number) {\n        let alive: boolean = this.grid[x][y] == 1 ? true : false\n        let n = this.neighbours(x, y)\n\n\n        if (alive) {\n            \n        }"],[0,"\n   "]],"start1":831,"start2":831,"length1":429,"length2":8}]}]},{"timestamp":1738246910857,"editorVersion":"7.0.3","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"r[]\n"],[-1,"    cell_size: number[]\n\n    constructor (fill: number, size: number[], cell_size: number[]) {\n        this.size = size\n        this.cell_size = cell_"],[1,"\n    constructor (fill=0.5, size=[10, 10]) {\n        this.size = "],[0,"size"]],"start1":262,"start2":262,"length1":158,"length2":73},{"diffs":[[0,"is.grid["],[-1,"y"],[1,"x"],[0," + offse"]],"start1":1164,"start2":1164,"length1":17,"length2":17},{"diffs":[[0,"set["],[-1,"1]][x"],[1,"0]][y"],[0," + o"]],"start1":1179,"start2":1179,"length1":13,"length2":13},{"diffs":[[0," offset["],[-1,"0"],[1,"1"],[0,"]]\n     "]],"start1":1190,"start2":1190,"length1":17,"length2":17},{"diffs":[[0,"   \n    "],[-1,"get_new_cell_state"],[1,"update_cell"],[0,"(x: numb"]],"start1":1250,"start2":1250,"length1":34,"length2":27},{"diffs":[[0,"is.grid["],[-1,"y][x"],[1,"x][y"],[0,"] == 1 ?"]],"start1":1325,"start2":1325,"length1":20,"length2":20},{"diffs":[[0,"y)\n\n"],[-1,"        let new_state = 0\n"],[0,"\n   "]],"start1":1394,"start2":1394,"length1":34,"length2":8},{"diffs":[[0,"    "],[-1,"if (n == 2 || n == 3) { new_state = 1 }\n        }\n        else {\n            if (n == 3) { new_state == 1 }\n        }\n\n        return new_state\n    }\n\n    update_grid () {\n        let new_grid = this.grid\n\n        for (let x = 0; x < this.size[0]; x++) {\n            for (let y = 0; y < this.size[1]; y++) {\n                let new_state = this.get_new_cell_state(x, y)\n                new_grid[y][x] = new_state\n            }\n        }\n\n        this.grid = new_grid\n    }\n\n    render () {\n        for (let x = 0; x < this.size[0]; x++) {\n            for (let y  = 0; y < this.size[1]; y++) {\n                let rx = x * this.cell_size[0]\n                let ry = y * this.cell_size[1]\n                matrix.rectangle(rx, ry, rx + this.cell_size[0], ry + this.cell_size[1])\n            }\n        }\n\n        matrix.displayMatrix()"],[1,"\n        }\n    }\n\n    update_grid () {\n        for (let x = 0; x < this.size[0]; x++) {\n            for (let y = 0; y < this.size[1]; y++) {\n                this.update_cell(x, y)\n            }\n        }\n    }\n\n    render () {\n"],[0,"\n   "]],"start1":1428,"start2":1428,"length1":839,"length2":235},{"diffs":[[0," }\n}"],[-1,"\n\n\nconst main: Main = new Main(0.3, [10, 10], [8, 8])\nmain.run()"]],"start1":1773,"start2":1773,"length1":68,"length2":4}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"Life"],[-1," Calliope"],[0,"\",\n "]],"start1":31,"start2":31,"length1":17,"length2":8}]}]},{"timestamp":1738247519767,"editorVersion":"7.0.3","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":250,"start2":250,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// Hier kann man Tests durchfÃ¼hren; diese Datei wird nicht kompiliert, wenn dieses Paket als Erweiterung verwendet wird.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1738245729564,"editorVersion":"7.0.3","text":{"main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Conways Game of Life\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1738247519772}